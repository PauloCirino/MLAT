% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Methods.R
\name{MLP_regression}
\alias{MLP_regression}
\title{Multilayer Perceptron}
\usage{
MLP_regression(X_train, Y_train, X_test, n_neurons, weight_decay = 0,
  max_iter = 1000)
}
\arguments{
\item{X_train}{A Matrix of trainning observations.}

\item{Y_train}{A numeric vector of classes or values of the trainning observations.}

\item{X_test}{A Matrix of testing observations.}

\item{n_neurons}{Number of neurons in the hidden layer.}

\item{weight_decay}{Weigth decay parameter for neural network.}

\item{max_iter}{Maximun number of trainning iterations.}
}
\value{
predicted values
}
\description{
Performs a multilayer perceptron regression.
}
\examples{
X <- as.matrix(cbind(runif(n = 100), runif(n = 100)))
Y <- 3*X[, 1] - 2.5*X[, 2] + 0.2 * runif(100)
pos <- sample(100, 70)
X_train <- X[pos, ]
X_test <- X[-pos, ]
Y_train <- Y[pos]
Y_test <- Y[-pos]
n_neurons <- 20
Y_predicted <- MLP_regression(X_train = X_train, Y_train = Y_train, X_test = X_test, n_neurons = n_neurons)
plot(x = (1:100)[-pos], y = Y_test, col = 'red')
points(x = (1:100)[-pos], y = Y_predicted, col = 'blue')
}
